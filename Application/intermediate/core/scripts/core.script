local create_core = function()
{
    local core = 
    {
        test_name = 0,
        speed = 1.0, 
    };

    core.init = function()
    {
        print("game core init.");
        .shading_env = resource.find_resource(string_to_id("shading_enviroment"), string_to_id("core/common/default"));
        world.set_shading_enviroment(.shading_env);

        package_name = "data/world0.package";
        global g_package_loading = string_to_id(package_name);
        resource.load_package(package_name);

        this:stateSet(.splash_state);
    };

    core.shutdown = function()
    {
        print("game core shutdown.");
    };

    core.splash_state = function()
    {
        while( true )
        {
            local w = get_window_width(); 
            local h = get_window_height();  
            gui.draw_round_rect(0, 0, w, h, 4, rgba_to_int(0,125,255));
            gui.draw_text(w/2, h/2, gui.TEXT_ALGIN_LEFT, "Loading core.package", rgba_to_int(255,255,0));

            local status = resource.get_package_status(g_package_loading);
            print("status = " + status);

            if(status == resource.OFFLINE)
            {
                resource.flush_package(g_package_loading, 99999);
            }
            else if(status == resource.ONLINE)
            {
                this:stateSet(.loaded_state);
            }
            yield();
        }
    };

    core.loaded_state = function()
    {
        while(true)
        {
            local w = get_window_width();
            local h = get_window_height();  
            gui.draw_text(w/2, h/2, gui.TEXT_ALGIN_LEFT, "Loaded!!!!!", rgba_to_int(255,0,0));

            gui.begin_area("test_area", 0, 0, 128, 512);
            gui.float_slider("Speed", "speed", this, 0.0, 1.0, 0.01);
            gui.end_area();

            if(input.is_key_just_pressed(input.F1))
            {
                world.create_actor(string_to_id("core/common/floor"), 0, 0, 0);
            }

            yield();
        }  
    };

    return core;
};

global g_core = create_core();